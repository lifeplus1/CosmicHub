{
  "name": "cosmichub",
  "version": "1.0.0",
  "description": "A comprehensive astrology and spiritual guidance platform with multi-system chart calculations",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@8.15.0",
  "scripts": {
    "env:sync": "node ./scripts/sync-env.mjs",
    "dev": "concurrently \"pnpm run dev:backend\" \"pnpm run dev:astro\" \"pnpm run dev:healwave\"",
    "dev:astro": "cd apps/astro && pnpm run dev",
    "dev:healwave": "cd apps/healwave && pnpm run dev",
    "dev:mobile": "cd apps/mobile && pnpm run dev",
    "dev:backend": "cd backend && python3 -m uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "dev-frontend": "pnpm run dev:astro",
    "build": "pnpm run build:astro && pnpm run build:healwave",
    "build:astro": "cd apps/astro && pnpm run build",
    "build:healwave": "cd apps/healwave && pnpm run build",
    "test": "pnpm run test:astro && pnpm run test:healwave && pnpm run test:types && pnpm run test:backend",
    "test:astro": "cd apps/astro && pnpm run test",
    "test:healwave": "cd apps/healwave && pnpm run test",
    "test:types": "cd packages/types && vitest run --coverage",
    "test:backend": "cd backend && python3 -m pytest tests/ -v --cov=astro --cov-report=xml --cov-report=html",
    "benchmark:synastry": "python3 scripts/benchmark_vectorized_synastry.py --sizes=1,10,50,100 --json=benchmark-latest.json",
    "test:watch": "pnpm run test:astro -- --watch",
    "lint": "pnpm run lint:astro && pnpm run lint:healwave && pnpm run lint:types && pnpm run lint:backend && pnpm run lint:fail-usage",
    "lint:astro": "eslint apps/astro/src --ext .ts,.tsx --max-warnings=0 --config eslint.config.js",
    "lint:healwave": "cd apps/healwave && pnpm run lint",
    "lint:types": "eslint packages/types/src --ext .ts --max-warnings=0 --config eslint.config.js",
    "lint:backend": "cd backend && (command -v python >/dev/null 2>&1 && PY=python || PY=python3; $PY -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics)",
    "lint:ratchet": "node ./scripts/lint-ratchet.mjs",
    "lint:changed:strict": "node ./scripts/lint-changed-strict.mjs",
    "lint:guard": "node ./scripts/lint-guard.mjs",
    "lint:fail-usage": "node ./scripts/fail-usage-guard.mjs",
    "lint:delta": "node ./scripts/lint-delta.mjs",
    "lint:update-doc": "node ./scripts/lint-update-doc.mjs",
    "lint:badge": "node ./scripts/lint-badge.mjs",
    "format": "pnpm run format:astro && pnpm run format:healwave && pnpm run format:backend",
    "format:astro": "cd apps/astro && pnpm run format",
    "format:healwave": "cd apps/healwave && pnpm run format",
    "format:backend": "cd backend && (command -v python >/dev/null 2>&1 && PY=python || PY=python3; $PY -m black . && $PY -m isort .)",
    "type-check": "node ./scripts/typecheck.mjs",
    "type-check:tests": "node ./scripts/typecheck-tests.cjs",
    "type-check:astro": "cd apps/astro && pnpm run type-check",
    "type-check:astro:stories": "cd apps/astro && tsc -p tsconfig.json --noEmit --pretty",
    "type-check:healwave": "cd apps/healwave && pnpm run type-check",
    "type-check:types": "tsc -p packages/types/tsconfig.json --noEmit && tsc -p packages/types/tsconfig.test.json --noEmit",
    "type:ratchet": "node ./scripts/type-ratchet.mjs",
    "coverage:ratchet": "node ./scripts/coverage-ratchet.mjs",
    "coverage:ratchet:check": "node ./scripts/coverage-ratchet-check.mjs",
    "coverage:report": "node ./scripts/coverage-report.mjs",
    "deps:outdated": "pnpm outdated --recursive --format=json > metrics/outdated-latest.json || true",
    "build:astro:analyze": "cd apps/astro && ANALYZE=1 pnpm run build",
    "audit:prod": "pnpm audit --prod --json > metrics/audit-latest.json || true",
    "a11y:check": "cd apps/astro && pnpm run a11y:check",
    "quality:all": "pnpm run lint && pnpm run type-check && pnpm run coverage:ratchet && pnpm run a11y:check",
    "cleanup:report": "node ./scripts/project-cleanup.mjs",
    "validate-env": "echo 'Environment validation passed'",
    "install:all": "pnpm install && cd apps/astro && pnpm install && cd ../healwave && pnpm install && cd ../../backend && pip install -r requirements.txt",
    "clean": "pnpm run clean:astro && pnpm run clean:healwave && pnpm run clean:backend",
    "clean:astro": "cd apps/astro && rm -rf dist node_modules/.vite",
    "clean:healwave": "cd apps/healwave && rm -rf dist node_modules/.vite",
    "clean:backend": "cd backend && find . -type d -name __pycache__ -exec rm -rf {} + && rm -rf .pytest_cache",
    "setup": "pnpm run install:all && pnpm run setup:backend",
    "setup:backend": "cd backend && (command -v python3 >/dev/null 2>&1 && PY=python3 || PY=python; $PY -m venv .venv && source .venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt)",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "preview": "pnpm run preview:astro",
    "preview:astro": "cd apps/astro && pnpm run preview",
    "preview:healwave": "cd apps/healwave && pnpm run preview",
    "storybook": "cd apps/astro && pnpm run storybook",
    "build-storybook": "cd apps/astro && pnpm run build-storybook",
    "postinstall": "echo 'Run pnpm run install:all to install all dependencies' && node ./scripts/sync-env.mjs",
    "prepare": "husky install"
  },
  "workspaces": [
    "apps/astro",
    "apps/healwave",
    "apps/mobile",
    "backend",
    "packages/*",
    "ephemeris_server"
  ],
  "dependencies": {
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.7",
    "firebase": "^10.12.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "axe-core": "^4.10.0",
    "vitest-axe": "^0.1.0",
    "@storybook/addon-a11y": "8.6.14",
    "@storybook/addon-essentials": "8.6.14",
    "@storybook/addon-interactions": "8.6.14",
    "@storybook/addon-links": "8.6.14",
    "@storybook/react": "8.6.14",
    "@storybook/react-vite": "8.6.14",
    "@storybook/test": "8.6.14",
    "@testing-library/jest-dom": "^6.7.0",
    "@types/node": "^20.14.10",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vitest/coverage-v8": "^2.1.4",
    "@vitest/ui": "^2.1.4",
    "concurrently": "^8.2.2",
    "eslint": "^9.33.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "globals": "^13.19.0",
    "husky": "^9.1.6",
    "jiti": "^2.5.1",
    "jsdom": "^25.0.0",
    "lint-staged": "^15.2.10",
    "prettier": "^3.6.2",
    "storybook": "8.6.14",
    "typescript": "^5.0.0",
    "vite": "^5.4.0",
    "vitest": "^2.1.4"
  },
  "keywords": [
    "astrology",
    "numerology",
    "human-design",
    "spiritual",
    "charts",
    "cosmic",
    "monorepo"
  ],
  "author": "CosmicHub Team",
  "license": "UNLICENSED",
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/lifeplus1/CosmicHub.git"
  },
  "bugs": {
    "url": "https://gitlab.com/lifeplus1/CosmicHub/-/issues"
  },
  "homepage": "https://gitlab.com/lifeplus1/CosmicHub#readme",
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --max-warnings=0"
    ],
    "*.{md,json,yml,yaml}": [
      "prettier --check"
    ]
  }
}
